{
    "nav_home": "üöÄ Home",
    "nav_about": "üë®‚ÄçüöÄ About",
    "nav_projects": "‚öôÔ∏è Projects",
    "nav_resume": "üìÑ Resume",
    "nav_contact": "üì° Contact",

    "featured_projects_title": "Featured Projects",
    "featured_badge": "Featured",
    "other_projects_title": "Other Projects",

    "home_name": "Adrien CLAUDE",
    "home_network_gameplay_programmer": "Multiplayer & Gameplay Programmer",
    "home_presentation": "Welcome! My name is Adrien, I'm 20 years old, and I'm passionate about space, programming, and video games. I focus on game development, especially network programming, to create smooth and engaging multiplayer experiences.",
    "home_programming_language": "Programming Language",
    "home_cpp": "C++",
    "home_csharp": "C#",
    "home_c": "C",
    "home_engine_framework": "Engine and Framework",
    "home_unity": "Unity Engine",
    "home_sfml": "SFML",
    "home_software_tools": "Software and Tools",
    "home_visual_studio": "Visual Studio",
    "home_visual_studio_code": "Visual Studio Code",
    "home_cmake": "CMake",
    "home_github": "Github",
    "home_tortoise_svn": "TortoiseSVN",
    "home_doxygen": "Doxygen",

    "about_name": "Adrien CLAUDE",
    "about_title": "Multiplayer & Gameplay Programmer",
    "about_description_1": "Since my childhood, I have been fascinated by virtual worlds and the endless possibilities they offer. What began as hours spent playing turned into a passion for understanding how they work and creating new ones. I enjoy designing experiences that connect people, especially through network programming and multiplayer games, tackling technical challenges, and bringing new ideas to life.",
    "about_description_2": "Over time, another passion has taken hold of me: space. Its immensity and mysteries fuel my imagination and influence the way I approach creation. For me, virtual worlds and the universe share the same essence: exploring the unknown, pushing boundaries, and inventing new horizons.",
    "about_passion_icon": "‚ù§Ô∏è",
    "about_passion_title": "What I‚Äôm passionate about",
    "about_passion_content": "I grew up fascinated by virtual worlds and the infinity of space. Today, nothing makes me happier than creating experiences that connect people or dreaming about the mysteries of the universe. Every technical challenge overcome, every idea brought to life, is a small victory that drives me to explore even further.",
    "about_objective_icon": "üéØ",
    "about_objective_title": "My goals",
    "about_objective_content": "My goal is to combine my passions for virtual worlds and space by creating immersive experiences. I aim to design projects where network programming enables players to connect and explore new universes together.",

    "gameProjects_separator": "‚Üí",
    "gameProjects_team_icon": "üë•",

    "gameProjects_skill_c#": "C#",
    "gameProjects_skill_c++": "C++",
    "gameProjects_skill_c": "C",

    "gameProjects_skill_unity": "Unity",
    "gameProjects_skill_dots": "DOTS",

    "gameProjects_skill_sfml": "SFML",
    "gameProjects_skill_csfml": "CSFML",

    "gameProjects_skill_windows": "Windows",
    "gameProjects_skill_posix": "POSIX",
    "gameProjects_skill_android": "Android",

    "gameProjects_skill_multiplayer": "Multiplayer",
    "gameProjects_skill_fps": "FPS",
    "gameProjects_skill_competitive": "Competitive",
    "gameProjects_skill_farm_gane": "Farm Gane",
    "gameProjects_skill_roguelike": "Roguelike",
    "gameProjects_skill_board_game": "Board Game",
    "gameProjects_skill_turn_based_tactics": "Turn-based Tactics",

    "gameProjects_skill_network_engine": "Network Engine",
    "gameProjects_skill_winsock": "Winsock",
    "gameProjects_skill_bsd_sockets": "BSD sockets",

    "gameProjects_title_tme": "Travelers Multiplayer Engine",
    "gameProjects_start_tme": "June 2025",
    "gameProjects_end_tme": "Today",
    "gameProjects_team_size_tme": "1 person",
    "gameProjects_description_tme": "Cross-platform C++ network engine designed to simplify multiplayer game development. It supports both Windows (via Winsock) and POSIX-compliant systems (via BSD sockets).",

    "gameProjects_title_suna": "Suna",
    "gameProjects_start_suna": "Jan. 2025",
    "gameProjects_end_suna": "May 2025",
    "gameProjects_team_size_suna": "10 people",
    "gameProjects_description_suna": "Competitive FPS in the style of Counter-Strike. You play as either the Natives or the Corporates. One team‚Äôs objective is to plant the Harvester, while the opposing team must prevent it from being planted or defuse it if it has already been deployed.",

    "gameProjects_title_fairy_fields": "Fairy Fields",
    "gameProjects_start_fairy_fields": "Oct. 2024",
    "gameProjects_end_fairy_fields": "Dec. 2024",
    "gameProjects_team_size_fairy_fields": "9 people",
    "gameProjects_description_fairy_fields": "Mobile farming game with a magical twist. Build your farm to grow plants and transform them into potions to fulfill the villagers requests. You can also trade by buying and selling items with other players.",

    "gameProjects_title_shattered_soul": "Shattered Soul",
    "gameProjects_start_shattered_soul": "Jan. 2024",
    "gameProjects_end_shattered_soul": "May. 2024",
    "gameProjects_team_size_shattered_soul": "9 people",
    "gameProjects_description_shattered_soul": "In this 2D top-down roguelike, you play as a knightess whose soul ascends toward Divinity upon death. To contain this newfound power, she must defeat a god and claim her body as a vessel.",

    "gameProjects_title_solar_storm": "Solar Storm",
    "gameProjects_start_solar_storm": "Oct. 2023",
    "gameProjects_end_solar_storm": "Dec. 2023",
    "gameProjects_team_size_solar_storm": "8 people",
    "gameProjects_description_solar_storm": "In this board game, you must work together as a team to escape your ship, which is drifting straight into a solar storm. To survive, you‚Äôll need to collect metal to build shuttles, while also producing food and water. But beware if you run out of either, you‚Äôll be forced to say goodbye to one of your own.",

    "gameProjects_title_land_of_hope": "Land Of Hope",
    "gameProjects_start_land_of_hope": "Apr. 2023",
    "gameProjects_end_land_of_hope": "Juin 2023",
    "gameProjects_team_size_land_of_hope": "9 people",
    "gameProjects_description_land_of_hope": "In this turn-based tactical game, your objective is to conquer the Bad Lands. You‚Äôll begin by choosing your hero and soldiers, then move your troops across a tactical map, with combat inspired by Slay the Spire.",

    "resume_webp": "resume/Resume_Adrien_Claude.webp",
    "resume_download_file": "resume/Resume_Adrien_Claude.jpg",
    "resume_download_text": "Download",

    "contact_contact_me": "Contact me",
    "contact_email_text": "Email",
    "contact_email_address": "adrien.claude.88470@gmail.com",
    "contact_linkedin_text": "LinkedIn",
    "contact_linkedin_link": "linkedin.com/in/adrien-claude",

    "project_back_to_projects": "‚Üê Back to projects",
    "project_title": "Project Name",
    "project_status_completed": "Completed",
    "project_status_in_progress": "In Progress",
    "project_date": "2023 - 2024",
    "project_team_size": "Team of 4 people",
    
    "project_overview_title": "Project Overview",
    "project_description_1": "Main project description. Explain here the concept, objective and what makes this project unique. This section should give a clear overview of what the project does.",
    "project_description_2": "Second paragraph with more details about the main features, technical challenges overcome or the user experience offered.",
    
    "project_role_title": "My Role in the Project",
    "project_role_position": "Network and Gameplay Programmer",
    "project_role_duration": "January 2025 - May 2025",
    "project_role_description": "As a network and gameplay programmer, I was responsible for developing the game's network architecture and implementing multiplayer gameplay mechanics. My work focused on creating a smooth and responsive experience for all players.",
    "project_role_responsibilities_title": "Main Responsibilities:",
    "project_role_responsibility_1": "Architecture and implementation of the multiplayer network system",
    "project_role_responsibility_2": "Development of gameplay mechanics (shooting, movement, interactions)",
    "project_role_responsibility_3": "Game state synchronization between clients",
    "project_role_responsibility_4": "Network performance optimization and latency reduction",
    "project_role_responsibility_5": "Integration and testing of multiplayer features",
    
    "project_tech_title": "Technologies Used",
    
    "project_features_title": "Key Features",
    "project_feature_1_title": "Feature 1",
    "project_feature_1_desc": "Description of the first important feature of the project.",
    "project_feature_2_title": "Feature 2",
    "project_feature_2_desc": "Description of the second important feature of the project.",
    "project_feature_3_title": "Feature 3",
    "project_feature_3_desc": "Description of the third important feature of the project.",
    "project_feature_4_title": "Feature 4",
    "project_feature_4_desc": "Description of the fourth important feature of the project.",
    
    "project_challenges_title": "Technical Challenges Encountered",
    "project_challenge_1_title": "Technical Challenge 1",
    "project_challenge_1_desc": "Description of the first technical challenge encountered during development.",
    "project_challenge_1_code_caption": "Solution implemented to solve this challenge",
    "project_challenge_2_title": "Technical Challenge 2",
    "project_challenge_2_desc": "Description of the second technical challenge encountered during development.",
    "project_challenge_2_code_caption": "Code excerpt showing the solution",
    "project_challenge_3_title": "Technical Challenge 3",
    "project_challenge_3_desc": "Description of the third technical challenge encountered during development.",
    "project_challenge_3_solution_title": "Solution adopted:",
    "project_challenge_3_solution_desc": "Detailed explanation of the solution implemented to solve this challenge.",

    "project_title_suna": "Suna",
    "project_date_suna": "Jan. 2025 - May 2025",
    "project_team_size_suna": "Team of 10 people",
    "project_description_suna_1": "Suna is a competitive multiplayer first-person shooter inspired by Counter-Strike. In this game, two teams face off: the Corpos and the Natives.",
    "project_description_suna_2": "As a Corpo, you play as a combat robot with the objective of planting an extractor or eliminating the entire enemy team. As a Native, you are one of the planet's inhabitants, and your mission is to protect your resources by preventing the Corpos from planting the extractor or annihilating their team.",
    "project_role_position_suna": "Multiplayer & Gameplay Programmer",
    "project_role_description_suna": "As a multiplayer and gameplay programmer, I was responsible for implementing the foundation of the shooting system, hit detection and damage management, as well as creating a hybrid animation system combining Unity's ECS and its GameObject-based animation system. I also integrated animations and ensured proper player replication (movements, animations, shots, damage), while ensuring the game remains playable despite considerable ping.",
    "project_role_responsibility_suna_01": "Setup of different ECS simulations (client/server)",
    "project_role_responsibility_suna_02": "Implementation of the networked shooting system foundation",
    "project_role_responsibility_suna_03": "Hit detection and damage management related to player shooting",
    "project_role_responsibility_suna_04": "Implementation of a networked hybrid animation system between Unity's ECS and the GameObject-based animation system",
    "project_role_responsibility_suna_05": "Animation implementation",
    "project_role_responsibility_suna_06": "Replication of player movements, animations, and shooting",
    "project_feature_title_suna_01": "Server-Authoritative Network Architecture",
    "project_feature_desc_suna_01": "The network architecture is composed of multiple clients and a separate server, with centralized authority ensured by the server.",
    "project_feature_title_suna_02": "Matchmaking System",
    "project_feature_desc_suna_02": "Automatically gathers players and forms teams to quickly launch a match.",
    "project_feature_title_suna_03": "Player Action Replication and Consistency",
    "project_feature_desc_suna_03": "Ensures proper replication and consistency of movements, animations, and player actions, whether with low or high ping.",
    "project_feature_title_suna_04": "Match Flow",
    "project_feature_desc_suna_04": "Implements the entire match flow: buy phase, extractor placement and defusal, win/loss management, and transitions between different phases.",
    "project_feature_title_suna_05": "Economy System",
    "project_feature_desc_suna_05": "Manages the game's economy: money allocation based on actions, equipment purchases at the start of rounds, and rewards or penalties based on results.",
    "project_challenge_title_suna_01": "Networked Hybrid Animation System",
    "project_challenge_desc_suna_01": "For this project, we used Unity DOTS, which replaces Unity's traditional GameObject system with an entity-based system (ECS). Since Unity DOTS is still a technology in development, it doesn't have an integrated animation system. One of my responsibilities was therefore to create a hybrid system allowing the connection between ECS, which manages entity values and states, and Unity's traditional GameObject-based animation system. All while ensuring proper replication and network synchronization.",
    "project_challenge_solution_suna_01_title": "Solution adopted:",
    "project_challenge_solution_suna_01_desc": "I developed a hybrid system that uses dynamic buffers to store animation parameters (float, int, bool, trigger) as ECS components with network synchronization via GhostComponent. On the server, a system collects state changes and stores them in these buffers, while another system applies them to the traditional Unity Animator. On the client, the system automatically receives replicated data and updates animations locally. This architecture allows a clear separation between ECS logic and rendering, while ensuring smooth animation synchronization across all connected players.",
    
    "project_learnings_title": "What I Learned",
    "project_learnings_desc": "Describe here the main skills acquired, lessons learned and how this project contributed to your development as a developer.",
    "project_learning_1": "First important learning",
    "project_learning_2": "Second important learning",
    "project_learning_3": "Third important learning",
    "project_learning_4": "Fourth important learning",
    
    "project_other_projects_title": "Other Projects",
    "project_previous_title": "Previous Project",
    "project_previous_desc": "Short description of the previous project",
    "project_next_title": "Next Project",
    "project_next_desc": "Short description of the next project"
}